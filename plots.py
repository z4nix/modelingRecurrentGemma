import numpy as np
import matplotlib.pyplot as plt

entropy = np.array([[-0.0000, 0.1498, 0.2853, 0.2747, 0.3639, 0.9508, 1.0846],
         [-0.0000, 0.1650, 0.3487, 0.9025, 1.0591, 1.2934, 1.3341],
         [-0.0000, 0.2038, 0.3743, 0.3404, 0.7657, 1.3945, 1.4491],
         [-0.0000, 0.0518, 0.1327, 0.2612, 0.2220, 0.2967, 0.4574],
         [-0.0000, 0.1686, 0.1965, 0.1679, 0.1507, 0.3371, 0.6771],
         [-0.0000, 0.6192, 0.6345, 1.0062, 0.8815, 1.1308, 1.4198],
         [-0.0000, 0.2060, 0.4357, 1.0367, 0.8009, 0.5860, 1.0314],
         [-0.0000, 0.0790, 0.4122, 0.9086, 0.5185, 0.7118, 1.0642],
         [-0.0000, 0.1729, 0.7561, 1.0358, 0.8938, 0.8213, 1.7137],
         [-0.0000, 0.2772, 0.1926, 0.4936, 0.1646, 0.2507, 1.0251]])

attn_weights = [[[[ 8.5721e+00, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 7.6788e+00,  4.3451e+00, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 6.9767e+00,  3.5185e+00,  3.7074e+00, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 5.5014e+00,  5.1880e+00,  8.9342e+00,  3.7459e+00, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 6.6952e+00,  5.3444e+00,  9.3906e+00,  4.4670e+00,  3.0583e+00,
           -3.4028e+38, -3.4028e+38],
          [ 6.8424e+00,  4.8503e+00,  7.6239e+00,  4.4651e+00,  3.0909e+00,
            3.3958e+00, -3.4028e+38],
          [ 6.9355e+00,  4.8607e+00,  7.1914e+00,  3.2247e+00,  3.2891e+00,
            4.3420e+00,  2.7299e+00]],

         [[ 8.6390e+00, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 8.9505e+00,  5.7484e+00, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 6.6108e+00,  3.9718e+00,  2.9291e+00, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 6.8316e+00,  4.4935e+00,  6.1153e+00,  3.3527e+00, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 7.8234e+00,  5.0055e+00,  5.5621e+00,  6.9856e+00,  4.8805e+00,
           -3.4028e+38, -3.4028e+38],
          [ 7.8710e+00,  6.0898e+00,  6.7278e+00,  8.1797e+00,  5.7312e+00,
            4.2157e+00, -3.4028e+38],
          [ 6.9740e+00,  3.7252e+00,  6.5360e+00,  6.8966e+00,  4.3826e+00,
            3.7292e+00,  3.2183e+00]],

         [[ 9.2520e+00, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 6.1698e+00,  3.2625e+00, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 5.0166e+00,  2.4865e+00,  1.4381e+00, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 7.1562e+00,  3.5884e+00,  3.9091e+00,  2.8329e+00, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 7.1070e+00,  3.9138e+00,  3.8721e+00,  4.8201e+00,  4.4506e+00,
           -3.4028e+38, -3.4028e+38],
          [ 6.3242e+00,  2.9837e+00,  4.7048e+00,  6.1967e+00,  5.7623e+00,
            3.6199e+00, -3.4028e+38],
          [ 5.3317e+00,  1.9822e+00,  3.5196e+00,  4.7487e+00,  4.2438e+00,
            3.1823e+00,  1.5476e+00]],

         [[ 5.9868e+00, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 5.5559e+00,  8.6533e-01, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 5.4099e+00,  1.5108e+00,  2.9124e-01, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 5.7569e+00,  1.7001e+00,  2.2455e+00,  1.0640e+00, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 6.5469e+00,  1.7758e+00,  2.4519e+00,  1.7653e+00,  1.7605e+00,
           -3.4028e+38, -3.4028e+38],
          [ 6.4926e+00,  2.1223e+00,  2.4180e+00,  1.2330e+00,  1.7122e+00,
            2.2769e+00, -3.4028e+38],
          [ 6.8377e+00,  2.8955e+00,  3.1279e+00,  2.3704e+00,  2.4771e+00,
            2.8188e+00,  2.4135e+00]],

         [[ 1.1600e+01, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 1.3514e+01,  1.0342e+01, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 1.3350e+01,  5.8011e+00,  1.0360e+01, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 1.3710e+01,  8.2500e+00,  8.0237e+00,  1.0081e+01, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 1.2635e+01,  7.6727e+00,  6.7606e+00,  4.8496e+00,  8.6113e+00,
           -3.4028e+38, -3.4028e+38],
          [ 1.2145e+01,  9.3438e+00,  7.0451e+00,  5.5890e+00,  5.6670e+00,
            7.8364e+00, -3.4028e+38],
          [ 1.3548e+01,  9.3164e+00,  1.0986e+01,  9.8438e+00,  7.8006e+00,
            7.7920e+00,  1.1044e+01]],

         [[ 1.0864e+01, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 9.7702e+00,  8.9705e+00, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 9.8522e+00,  6.2496e+00,  8.6757e+00, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 8.6526e+00,  5.6566e+00,  6.9903e+00,  8.7284e+00, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 8.1892e+00,  5.3683e+00,  4.4906e+00,  4.7950e+00,  8.5444e+00,
           -3.4028e+38, -3.4028e+38],
          [ 9.0445e+00,  7.6635e+00,  4.5109e+00,  4.2340e+00,  6.3699e+00,
            8.8630e+00, -3.4028e+38],
          [ 8.2426e+00,  4.2998e+00,  7.5888e+00,  6.8938e+00,  5.7566e+00,
            5.7621e+00,  8.6000e+00]],

         [[ 7.8737e+00, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 6.5755e+00,  3.6837e+00, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 6.0436e+00,  2.8832e+00,  3.6454e+00, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 6.6248e+00,  4.1804e+00,  6.2682e+00,  4.6443e+00, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 8.4250e+00,  5.1891e+00,  7.3107e+00,  4.5484e+00,  4.4280e+00,
           -3.4028e+38, -3.4028e+38],
          [ 7.1409e+00,  4.2207e+00,  4.2130e+00,  2.8045e+00,  3.2400e+00,
            2.8925e+00, -3.4028e+38],
          [ 6.6560e+00,  3.9951e+00,  5.6729e+00,  2.8589e+00,  2.7211e+00,
            2.8537e+00,  3.3448e+00]],

         [[ 7.9179e+00, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 5.9770e+00,  1.8104e+00, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 4.1570e+00,  1.6324e+00,  9.6940e-01, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 4.4206e+00,  2.3461e+00,  1.5378e+00,  3.1228e+00, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 7.7918e+00,  4.0817e+00,  4.8270e+00,  4.5360e+00,  3.8446e+00,
           -3.4028e+38, -3.4028e+38],
          [ 6.6337e+00,  3.2674e+00,  3.3342e+00,  3.8816e+00,  3.4136e+00,
            2.9557e+00, -3.4028e+38],
          [ 6.3574e+00,  3.1581e+00,  3.7328e+00,  4.4268e+00,  3.1356e+00,
            2.8237e+00,  3.7053e+00]],

         [[ 9.8692e+00, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 7.5591e+00,  4.4214e+00, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 5.2250e+00,  3.3323e+00,  3.6507e+00, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 6.8296e+00,  5.0059e+00,  6.7624e+00,  4.3172e+00, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 8.2197e+00,  4.5081e+00,  7.4444e+00,  5.0094e+00,  4.9237e+00,
           -3.4028e+38, -3.4028e+38],
          [ 8.4743e+00,  4.9394e+00,  6.6179e+00,  4.9008e+00,  5.3533e+00,
            4.9194e+00, -3.4028e+38],
          [ 6.9879e+00,  5.6396e+00,  5.9129e+00,  5.9154e+00,  5.8426e+00,
            5.0263e+00,  4.9327e+00]],

         [[ 9.4646e+00, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 8.8698e+00,  6.4188e+00, -3.4028e+38, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 1.0260e+01,  5.4393e+00,  6.9142e+00, -3.4028e+38, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 9.5398e+00,  6.0293e+00,  6.9224e+00,  6.2009e+00, -3.4028e+38,
           -3.4028e+38, -3.4028e+38],
          [ 6.5577e+00,  4.5398e+00,  6.6091e+00,  1.0972e+01,  5.3166e+00,
           -3.4028e+38, -3.4028e+38],
          [ 5.8761e+00,  4.3723e+00,  6.1736e+00,  1.0552e+01,  6.8159e+00,
            4.2856e+00, -3.4028e+38],
          [ 1.1274e+01,  7.2919e+00,  9.7401e+00,  1.2260e+01,  9.2510e+00,
            7.2035e+00,  8.9653e+00]]]]

# choose the topk values across the first dimension
topk = np.argsort(entropy, axis=0)[-1]

# plot the topk values
plt.plot(topk)
plt.show()
